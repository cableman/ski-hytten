<?php

/**
 * Implements hook_menu().
 */
function context_inline_editor_menu() {
  $items = array();
  $items['admin/structure/context/editor_fitler'] = array(
    'title' => 'Editor filter',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('context_inline_editor_filter_form'),
    'description' => 'Select which contexts should be available in the context inline editor.',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/context_inline_editor.admin.inc',
  );

  return $items;
}

function context_inline_editor_page_build(&$page) {
 if (user_access('administer site configuration') && strpos($_GET['q'], 'admin/structure/context') === FALSE && $contexts = context_active_contexts()) {
   // Filter the avaliable contexts, based on administration settings.
   context_inline_editor_filter($contexts);
   if (empty($contexts)) {
     // The filter may have removed all context, it this is the case the edit
     // contexts link should not be add to the shortcut bar.
     return;
   }

   // Build the context inline editor form.
   $form = drupal_get_form('context_ui_editor', $contexts);
   $form['buttons']['save']['#attributes']['class'] = array('context-inline-editor-save');
   $form['buttons']['cancel']['#attributes']['class'] = array('context-inline-editor-cancel');
   $page['page_bottom']['context_inline_editor'] = array(
     'content' => $form,
     '#prefix' => '<div id="context-inline-editor" class="element-invisible">',
     '#suffix' => '</div>',
   );
   drupal_add_library('system', 'ui.dialog');
   drupal_add_js(drupal_get_path('module', 'context_inline_editor') . '/context_inline_editor.js', array('preprocess' => FALSE));
   drupal_add_css(drupal_get_path('module', 'context_inline_editor') . '/context_inline_editor.css', array('preprocess' => FALSE));
 }
}

function context_inline_editor_form_context_ui_editor_alter(&$form, &$form_state) {
  foreach (element_children($form['contexts']) as $context) {
    $form['contexts'][$context]['#type'] = 'container';
    foreach (element_children($form['contexts'][$context]) as $pane) {
      if (isset($form['contexts'][$context][$pane]['#title'])) {
        $form['contexts'][$context][$pane]['#type'] = 'fieldset';
        $form['contexts'][$context][$pane]['#collapsible'] = true;
        $form['contexts'][$context][$pane]['#collapsed'] = true;
        foreach (element_children($form['contexts'][$context][$pane]) as $element) {
          if (isset($form['contexts'][$context][$pane][$element]["#type"]) && $form['contexts'][$context][$pane][$element]["#type"] == 'textfield') {
            $form['contexts'][$context][$pane][$element]["#size"] = 30;
          }
        }
      }
    }
  }
}

/**
 * Helper function that filters out the contexts not selected to be editable
 * in the inline editor.
 *
 * @param type $contexts
 */
function context_inline_editor_filter(&$contexts) {
  $filter = variable_get('context_inline_editor_filter', FALSE);
  if ($filter) {
    foreach ($contexts as $id => $context) {
      $tag = empty($context->tag) ? 'untagged' : $context->tag;
      if (isset($filter[$tag]['options'][$id]) && $filter[$tag]['options'][$id]) {
        unset($contexts[$id]);
      }
    }
  }
}
